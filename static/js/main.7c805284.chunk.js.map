{"version":3,"sources":["components/Match.js","components/MatchCard.js","components/Navigation.js","components/Standings.js","App.js","serviceWorker.js","index.js"],"names":["whoWon","match","hscore","ascore","hteam","ateam","MatchCard","props","componentDidMount","a","fetch","method","headers","body","JSON","stringify","database","then","data","json","array","Array","isArray","setState","users","catch","err","console","log","onDatabaseChange","event","target","value","onOptionChange","id","needConfirm","onSubmitResult","state","team1","team2","winner","alert","onScoreVerification","leagueOptions","className","onChange","this","map","key","type","onClick","React","Component","Navigation","button","isAdmin","setIsOpen","onRouteChange","isSignedIn","loginWithPopup","logout","user","style","display","justifyContent","name","returnTo","window","location","origin","Standings","useState","setData","useEffect","axios","get","title","columns","selector","sortable","right","theme","salt","bcrypt","genSaltSync","initState","matches","route","email","App","useAuth0","isAuthenticated","isOpen","pw","setpw","setIsAdmin","loadUser","given_name","component","submitPassword","hashPassword","hashSync","password","status","open","onClose","center","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","ReactDOM","render","clientId","domain","redirectUri","StrictMode","document","getElementById","URL","process","href","addEventListener","response","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.7c805284.chunk.js","sourcesContent":["//This function needs to set the new object's property to a string before\r\n//passing it to the Card component, or React won't render it.\r\n//Remember you won't be working with an array, but rather with a database\r\n//so you'll have to convert it to string before putting it into the database.\r\n\r\nconst whoWon = (match) => {\r\n  if (match.hscore > match.ascore) return match.hteam;\r\n  else if (match.ascore > match.hscore) return match.ateam;\r\n  else return \"tie\";\r\n};\r\n\r\nexport default whoWon;\r\n","import React from \"react\";\r\nimport whoWon from \"./Match\";\r\n\r\nclass MatchCard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      database: \"\",\r\n      leagueOptions: [\"matches\", \"MMP-Dobles\", \"MMP-Futboltenis\"],\r\n      users: [],\r\n      hteam: \"\",\r\n      ateam: \"\",\r\n      team1: \"\",\r\n      team2: \"\",\r\n      hscore: 0,\r\n      ascore: 0,\r\n      winner: \"\",\r\n      needConfirm: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    await fetch(\"https://peaceful-wildwood-69585.herokuapp.com/loadusers\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        database: \"matches\",\r\n      }),\r\n    })\r\n      .then((data) => data.json())\r\n      .then((array) => {\r\n        if (Array.isArray(array)) {\r\n          this.setState({ users: array });\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  onDatabaseChange = async (event) => {\r\n    await fetch(\"https://peaceful-wildwood-69585.herokuapp.com/loadusers\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        database: event.target.value,\r\n      }),\r\n    })\r\n      .then((data) => data.json())\r\n      .then((array) => {\r\n        if (Array.isArray(array)) {\r\n          this.setState({ users: array });\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  onOptionChange = (event) => {\r\n    if (event.target.id === \"database\") {\r\n      this.onDatabaseChange(event);\r\n    }\r\n    this.setState({ [event.target.id]: event.target.value });\r\n    this.setState({ needConfirm: false });\r\n  };\r\n\r\n  onSubmitResult = () => {\r\n    const { hteam, ateam, team1, team2, hscore, ascore, winner } = this.state;\r\n    if (!hteam || !ateam || !team1 || !team2 || !winner) alert(\"Missing data\");\r\n    else {\r\n      fetch(\"https://peaceful-wildwood-69585.herokuapp.com/matchload\", {\r\n        method: \"post\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          hteam: hteam,\r\n          ateam: ateam,\r\n          team1: team1,\r\n          team2: team2,\r\n          hscore: hscore,\r\n          ascore: ascore,\r\n          winner: winner,\r\n        }),\r\n      }).catch((err) => console.log(\"oops\"));\r\n      this.setState = {\r\n        hteam: \"\",\r\n        ateam: \"\",\r\n        team1: \"\",\r\n        team2: \"\",\r\n        hscore: 0,\r\n        ascore: 0,\r\n        winner: \"\",\r\n        needConfirm: false,\r\n      };\r\n      alert(\"Match loaded to database\");\r\n    }\r\n  };\r\n\r\n  onScoreVerification = () => {\r\n    this.setState({ winner: whoWon(this.state) });\r\n    this.setState({ needConfirm: true });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <article className=\"br3 white pa3 ma2 bw1 ba shadow-5 dt dt--fixed w-auto fl center\">\r\n        <h1>Load Match</h1>\r\n        <select id=\"database\" onChange={this.onOptionChange}>\r\n          {this.state.leagueOptions.map((value) => (\r\n            <option key={value} value={value}>\r\n              {value}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <main className=\"b flex pa2\">\r\n          <div>\r\n            <p>Player Name</p>\r\n            <input\r\n              type=\"text\"\r\n              id=\"ateam\"\r\n              onChange={this.onOptionChange}\r\n            ></input>\r\n            <select type=\"text\" id=\"hteam\" onChange={this.onOptionChange}>\r\n              {this.state.users.map((value) => (\r\n                <option key={value} value={value}>\r\n                  {value}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            <p>Team</p>\r\n            <input\r\n              type=\"text\"\r\n              id=\"team1\"\r\n              onChange={this.onOptionChange}\r\n            ></input>\r\n            <p>Score</p>\r\n            <input\r\n              type=\"number\"\r\n              id=\"hscore\"\r\n              onChange={this.onOptionChange}\r\n            ></input>\r\n          </div>\r\n          <h2 className=\"pa3\">VS</h2>\r\n          <div>\r\n            <p>Player Name</p>\r\n            <input\r\n              type=\"text\"\r\n              id=\"ateam\"\r\n              onChange={this.onOptionChange}\r\n            ></input>\r\n            <select type=\"text\" id=\"hteam\" onChange={this.onOptionChange}>\r\n              {this.state.users.map((value) => (\r\n                <option key={value} value={value}>\r\n                  {value}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            <p>Team</p>\r\n            <input\r\n              type=\"text\"\r\n              id=\"team2\"\r\n              onChange={this.onOptionChange}\r\n            ></input>\r\n            <p>Score</p>\r\n            <input\r\n              type=\"number\"\r\n              id=\"ascore\"\r\n              onChange={this.onOptionChange}\r\n            ></input>\r\n          </div>\r\n        </main>\r\n        <h2>Winner: {this.state.winner}</h2>\r\n        {!this.state.needConfirm ? (\r\n          <input\r\n            className=\"b br3 ph3 pv2 input-reset ba b--white white bg-transparent grow pointer f6 dib\"\r\n            type=\"submit\"\r\n            value=\"Submit\"\r\n            onClick={this.onScoreVerification}\r\n          />\r\n        ) : (\r\n          <input\r\n            className=\"b br3 ph3 pv2 input-reset ba b--white white bg-green grow pointer f6 dib\"\r\n            type=\"submit\"\r\n            value=\"Confirm\"\r\n            onClick={this.onSubmitResult}\r\n          />\r\n        )}\r\n      </article>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MatchCard;\r\n","import React from \"react\";\r\n\r\nconst Navigation = ({\r\n  isAdmin,\r\n  setIsOpen,\r\n  onRouteChange,\r\n  isSignedIn,\r\n  loginWithPopup,\r\n  logout,\r\n  user,\r\n}) => {\r\n  let button;\r\n  if (isAdmin) {\r\n    button = (\r\n      <p\r\n        onClick={() => onRouteChange(\"load\")}\r\n        className=\"f3 link dim white underline pa3 pointer\"\r\n      >\r\n        Load Match\r\n      </p>\r\n    );\r\n  } else if (isSignedIn) {\r\n    button = (\r\n      <p onClick={setIsOpen} className=\"f3 link dim white underline pa3\">\r\n        Admin\r\n      </p>\r\n    );\r\n  } else {\r\n    button = (\r\n      <p\r\n        onClick={() => loginWithPopup()}\r\n        className=\"f3 link dim white underline pa3 pointer\"\r\n      >\r\n        Sign In\r\n      </p>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <nav style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n      <p className=\"f3 white pa3 absolute left-0\">Hello {user.name}</p>\r\n      <p\r\n        onClick={() => onRouteChange(\"home\")}\r\n        className=\"f3 link dim white underline pa3 pointer\"\r\n      >\r\n        Home\r\n      </p>\r\n      {/* <p\r\n          onClick={() => onRouteChange(\"profile\")}\r\n          className=\"f3 link dim white underline pa3 pointer\"\r\n        >\r\n          Profile\r\n        </p> */}\r\n      {button}\r\n      <p\r\n        onClick={() => logout({ returnTo: window.location.origin })}\r\n        className=\"f3 link dim white underline pa3 pointer\"\r\n      >\r\n        Sign Out\r\n      </p>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport axios from \"axios\";\r\n\r\nconst Standings = () => {\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"https://peaceful-wildwood-69585.herokuapp.com/standings\")\r\n      .then((data) => setData(data));\r\n    // eslint-disable-next-line\r\n  }, []);\r\n  const columns = [\r\n    {\r\n      name: \"Name\",\r\n      selector: \"name\",\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: \"Points\",\r\n      selector: \"points\",\r\n      sortable: true,\r\n      right: true,\r\n    },\r\n    {\r\n      name: \"P\",\r\n      selector: \"gamesPlayed\",\r\n      sortable: true,\r\n      right: true,\r\n    },\r\n    {\r\n      name: \"W\",\r\n      selector: \"gamesWon\",\r\n      sortable: true,\r\n      right: true,\r\n    },\r\n    {\r\n      name: \"D\",\r\n      selector: \"gamesTied\",\r\n      sortable: true,\r\n      right: true,\r\n    },\r\n    {\r\n      name: \"L\",\r\n      selector: \"gamesLost\",\r\n      sortable: true,\r\n      right: true,\r\n    },\r\n    {\r\n      name: \"%\",\r\n      selector: \"winpercent\",\r\n      sortable: true,\r\n      right: true,\r\n    },\r\n    {\r\n      name: \"GF\",\r\n      selector: \"goalsFor\",\r\n      sortable: true,\r\n      right: true,\r\n    },\r\n    {\r\n      name: \"GA\",\r\n      selector: \"goalsAgainst\",\r\n      sortable: true,\r\n      right: true,\r\n    },\r\n    {\r\n      name: \"GD\",\r\n      selector: \"goalDif\",\r\n      sortable: true,\r\n      right: true,\r\n    },\r\n  ];\r\n  return (\r\n    <DataTable\r\n      title=\"Standings\"\r\n      columns={columns}\r\n      data={data.data}\r\n      theme=\"dark\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default Standings;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport bcrypt from \"bcryptjs\";\r\nimport MatchCard from \"./components/MatchCard\";\r\nimport Navigation from \"./components/Navigation\";\r\nimport Standings from \"./components/Standings\";\r\nimport { Modal } from \"react-responsive-modal\";\r\n// import Profile from \"./components/Profile\";\r\nimport \"tachyons\";\r\nimport \"./App.css\";\r\nimport \"react-responsive-modal/styles.css\";\r\n\r\nconst salt = bcrypt.genSaltSync(10);\r\n\r\nconst initState = {\r\n  matches: [],\r\n  route: \"home\",\r\n  isSignedIn: true,\r\n  user: {\r\n    name: \"Guest\",\r\n    email: \"\",\r\n  },\r\n};\r\n\r\nconst App = () => {\r\n  const { loginWithPopup, logout, isAuthenticated, user } = useAuth0();\r\n\r\n  const [state, setState] = useState(initState);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [pw, setpw] = useState(\"\");\r\n  const [isAdmin, setIsAdmin] = useState(true);\r\n\r\n  const loadUser = (data) => {\r\n    if (data) {\r\n      setState({\r\n        ...state,\r\n        isSignedIn: isAuthenticated,\r\n        user: {\r\n          name: data.given_name,\r\n          email: data.email,\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadUser(user);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [user]);\r\n\r\n  const onRouteChange = (route) => {\r\n    if (route === \"signout\") {\r\n      setState(initState);\r\n    } else if (route === \"home\") {\r\n      setState({ ...state, isSignedIn: true });\r\n    }\r\n    setState({ ...state, route: route });\r\n  };\r\n\r\n  const onCloseModal = () => setIsOpen(false);\r\n\r\n  const fetchLeagues = async () => {\r\n    await fetch(\"https://peaceful-wildwood-69585.herokuapp.com/leagues\")\r\n      .then((data) => console.log(data))\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const submitPassword = async () => {\r\n    const hashPassword = bcrypt.hashSync(pw, salt);\r\n    await fetch(\"https://peaceful-wildwood-69585.herokuapp.com/admin\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ id: state.user.email, password: hashPassword }),\r\n    })\r\n      .then((data) => {\r\n        if (data.status === 200) setIsAdmin(true);\r\n        console.log(isAdmin);\r\n        setIsOpen(false);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  let route = state.route;\r\n  let component;\r\n  switch (route) {\r\n    case \"home\":\r\n      component = <Standings />;\r\n      break;\r\n    case \"load\":\r\n      component = <MatchCard />;\r\n      break;\r\n    default: {\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"App white\">\r\n      <Navigation\r\n        isSignedIn={state.isSignedIn}\r\n        isAdmin={isAdmin}\r\n        setIsOpen={setIsOpen}\r\n        onRouteChange={onRouteChange}\r\n        loginWithPopup={loginWithPopup}\r\n        logout={logout}\r\n        loadUser={loadUser}\r\n        user={state.user}\r\n      />\r\n      <div className=\"flex\">\r\n        <Modal open={isOpen} onClose={onCloseModal} center>\r\n          <h2>Password:</h2>\r\n          <input\r\n            type=\"password\"\r\n            onChange={(event) => setpw(event.target.value)}\r\n          />\r\n          <button onClick={submitPassword}>Login</button>\r\n        </Modal>\r\n        {component}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { Auth0Provider } from \"@auth0/auth0-react\";\r\n\r\nReactDOM.render(\r\n  <Auth0Provider\r\n    clientId=\"6olnEN1eSbfsiKTF9iMFEeUJMDLY8Mtt\"\r\n    domain=\"dev-bowof--q.us.auth0.com\"\r\n    redirectUri={window.location.origin}\r\n  >\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </Auth0Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}